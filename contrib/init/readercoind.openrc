#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/readercoin/.readercoin" ]; then
	READERCOIND_DEFAULT_DATADIR="/var/lib/readercoin/.readercoin"
else
	READERCOIND_DEFAULT_DATADIR="/var/lib/readercoind"
fi

READERCOIND_CONFIGFILE=${READERCOIND_CONFIGFILE:-/etc/readercoin/readercoin.conf}
READERCOIND_PIDDIR=${READERCOIND_PIDDIR:-/var/run/readercoind}
READERCOIND_PIDFILE=${READERCOIND_PIDFILE:-${READERCOIND_PIDDIR}/readercoind.pid}
READERCOIND_DATADIR=${READERCOIND_DATADIR:-${READERCOIND_DEFAULT_DATADIR}}
READERCOIND_USER=${READERCOIND_USER:-${READERCOIN_USER:-readercoin}}
READERCOIND_GROUP=${READERCOIND_GROUP:-readercoin}
READERCOIND_BIN=${READERCOIND_BIN:-/usr/bin/readercoind}
READERCOIND_NICE=${READERCOIND_NICE:-${NICELEVEL:-0}}
READERCOIND_OPTS="${READERCOIND_OPTS:-${READERCOIN_OPTS}}"

name="Readercoin Core Daemon"
description="Readercoin cryptocurrency P2P network daemon"

command="/usr/bin/readercoind"
command_args="-pid=\"${READERCOIND_PIDFILE}\" \
		-conf=\"${READERCOIND_CONFIGFILE}\" \
		-datadir=\"${READERCOIND_DATADIR}\" \
		-daemon \
		${READERCOIND_OPTS}"

required_files="${READERCOIND_CONFIGFILE}"
start_stop_daemon_args="-u ${READERCOIND_USER} \
			-N ${READERCOIND_NICE} -w 2000"
pidfile="${READERCOIND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${READERCOIND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${READERCOIND_USER}:${READERCOIND_GROUP}" \
	"${READERCOIND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${READERCOIND_USER}:${READERCOIND_GROUP}" \
	"${READERCOIND_PIDDIR}"

	checkpath -f \
	-o ${READERCOIND_USER}:${READERCOIND_GROUP} \
	-m 0660 \
	${READERCOIND_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${READERCOIND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run readercoind."
		eerror "The setting must appear in ${READERCOIND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following"
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is also recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Readercoin Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
